{"version":3,"sources":["webpay_plus.js"],"names":["WebpayPlus","require","asyncHandler","exports","create","request","response","next","buyOrder","Math","floor","random","sessionId","amount","returnUrl","protocol","get","Transaction","createResponse","token","url","viewData","render","step","stepDescription","commit","body","token_ws","commitResponse","status","statusResponse","refund","refundResponse"],"mappings":"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","sourcesContent":["const WebpayPlus = require(\"transbank-sdk\").WebpayPlus;\r\nconst asyncHandler = require(\"../utils/async_handler\");\r\n\r\nexports.create = asyncHandler(async function (request, response, next) {\r\n  let buyOrder = \"O-\" + Math.floor(Math.random() * 10000) + 1;\r\n  let sessionId = \"S-\" + Math.floor(Math.random() * 10000) + 1;\r\n  //let amount = Math.floor(Math.random() * 1000) + 1001;\r\n  let amount = 1000;\r\n  let returnUrl =\r\n    request.protocol + \"://\" + request.get(\"host\") + \"/webpay_plus/commit\";\r\n\r\n  const createResponse = await WebpayPlus.Transaction.create(\r\n    buyOrder,\r\n    sessionId,\r\n    amount,\r\n    returnUrl\r\n  );\r\n\r\n  let token = createResponse.token;\r\n  let url = createResponse.url;\r\n\r\n  let viewData = {\r\n    buyOrder,\r\n    sessionId,\r\n    amount,\r\n    returnUrl,\r\n    token,\r\n    url,\r\n  };\r\n  response.render(\"webpay_plus/create\", {\r\n    step: \"Crear Transacción\",\r\n    stepDescription:\r\n      \"En este paso crearemos la transacción con el objetivo de obtener un identificador unico y \" +\r\n      \"poder en el siguiente paso redirigir al Tarjetahabiente hacia el formulario de pago\",\r\n    viewData,\r\n  });\r\n});\r\n\r\nexports.commit = asyncHandler(async function (request, response, next) {\r\n  let token = request.body.token_ws;\r\n\r\n  const commitResponse = await WebpayPlus.Transaction.commit(token);\r\n\r\n  let viewData = {\r\n    token,\r\n    commitResponse,\r\n  };\r\n\r\n  response.render(\"webpay_plus/commit\", {\r\n    step: \"Confirmar Transacción\",\r\n    stepDescription:\r\n      \"En este paso tenemos que confirmar la transacción con el objetivo de avisar a \" +\r\n      \"Transbank que hemos recibido la transacción ha sido recibida exitosamente. En caso de que \" +\r\n      \"no se confirme la transacción, ésta será reversada.\",\r\n    viewData,\r\n  });\r\n});\r\n\r\nexports.status = asyncHandler(async function (request, response, next) {\r\n  let token = request.body.token;\r\n\r\n  const statusResponse = await WebpayPlus.Transaction.status(token);\r\n\r\n  let viewData = {\r\n    token,\r\n    statusResponse,\r\n  };\r\n\r\n  response.render(\"webpay_plus/status\", {\r\n    step: \"Estado de Transacción\",\r\n    stepDescription:\r\n      \"Puedes solicitar el estado de una transacción hasta 7 días despues de que haya sido\" +\r\n      \" realizada. No hay limite de solicitudes de este tipo, sin embargo, una vez pasados los \" +\r\n      \"7 días ya no podrás revisar su estado.\",\r\n    viewData,\r\n  });\r\n});\r\n\r\nexports.refund = asyncHandler(async function (request, response, next) {\r\n  let { token, amount } = request.body;\r\n\r\n  const refundResponse = await WebpayPlus.Transaction.refund(token, amount);\r\n\r\n  let viewData = {\r\n    token,\r\n    amount,\r\n    refundResponse,\r\n  };\r\n\r\n  response.render(\"webpay_plus/refund\", {\r\n    step: \"Reembolso de Transacción\",\r\n    stepDescription:\r\n      \"Podrás pedir el reembolso del dinero al tarjeta habiente, dependiendo del monto \" +\r\n      \"y el tiempo transacurrido será una Reversa, Anulación o Anulación parcial.\",\r\n    viewData,\r\n  });\r\n});\r\n"],"file":"webpay_plus.dev.js"}